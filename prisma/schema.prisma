// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  rollNo    String
  branch    String
  year      Int
  submissions  Submission[]
  contestStats  ContestStats[]
  createdAt DateTime @default(now())
  Admin   Boolean  @default(false)
}

model Contest {
  id          String      @id @default(cuid())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  problems    Problem[] @relation("ContestProblems")
  submissions Submission[]
  contestStats ContestStats[]
}

model Problem {
  id          String      @id @default(cuid())
  title       String
  statement   String
  inputFormat  String
  outputFormat String
  sampleInput  String
  sampleOutput String
  constraints String
  testCases   TestCase[]
  contests    Contest[]     @relation("ContestProblems")
  submissions Submission[]
}

model TestCase {
  id         String   @id @default(cuid())
  input      String
  output     String
  problem    Problem  @relation(fields: [problemId], references: [id])
  problemId  String
  isPublic   Boolean  
}

model Submission {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  problem    Problem  @relation(fields: [problemId], references: [id])
  problemId  String
  contest    Contest  @relation(fields: [contestId], references: [id])
  contestId  String
  language   String
  code       String
  verdict    String    // e.g. "Accepted", "Wrong Answer", etc.
  score      Int       // 100 if all passed, else 0 or partial
  submittedAt DateTime @default(now())
}

model ContestStats {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  contest    Contest  @relation(fields: [contestId], references: [id])
  contestId  String
  score      Int      @default(0)
  problemsSolved Int  @default(0)
}



